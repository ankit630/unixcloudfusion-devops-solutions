apiVersion: batch/v1
kind: Job
metadata:
  name: pre-sync-efs-setup
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: gitlab-runner-sa
      containers:
      - name: kubectl
        image: bitnami/kubectl
        command:
        - /bin/sh
        - -c
        - |
          EFS_ID=$(kubectl get secret gitlab-runner-secret -n gitlab-runner -o jsonpath='{.data.efs-id}' | base64 -d)
          
          # Create StorageClass
          cat <<EOF | kubectl apply -f -
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: efs-sc
          provisioner: efs.csi.aws.com
          parameters:
            provisioningMode: efs-ap
            fileSystemId: $EFS_ID
            directoryPerms: "700"
            gidRangeStart: "1000"
            gidRangeEnd: "2000"
          EOF
          
          # Create PersistentVolume
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: gitlab-runner-efs-pv
          spec:
            capacity:
              storage: 5Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Retain
            storageClassName: efs-sc
            csi:
              driver: efs.csi.aws.com
              volumeHandle: $EFS_ID
          EOF
          
          # Create PersistentVolumeClaim
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: gitlab-runner-efs-pvc
            namespace: gitlab-runner
          spec:
            accessModes:
              - ReadWriteMany
            storageClassName: efs-sc
            resources:
              requests:
                storage: 5Gi
          EOF
      restartPolicy: OnFailure